<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd" >

   <context:component-scan base-package="fr.gael.dhus.database" />

   <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
        <property name="url" value="jdbc:hsqldb:file:#{ configurationLoader.getDatabasePath () };shutdown=true;#{ configurationLoader.getDatabaseSettings () }" />
        <property name="username" value="sa" />
        <property name="password" value="" />
        
        <property name="initialSize" value="5" />
        <property name="maxTotal" value="10" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="10" />
    </bean>

   <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
      <property name="dataSource" ref="dataSource" />
      <property name="changeLog"
                value="classpath:liquibase/changelog-master.xml" />
   </bean>

   <bean id="sessionFactory" depends-on="liquibase"
         class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="packagesToScan">
         <list>
            <value>fr.gael.dhus.database.object</value>
         </list>
      </property>
      <property name="hibernateProperties">
         <props>
            <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
            <prop key="hibernate.hbm2ddl.auto">create</prop>
            <prop key="hibernate.show_sql">false</prop>
            <prop key="hibernate.format_sql">true</prop>
            <prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</prop>
           
            <prop key="javax.persistence.validation.mode">none</prop>
            <prop key="hibernate.generate_statistics">false</prop>
         </props>
      </property>
      
      <property name="eventListeners">
         <map>
            <entry key="save" value-ref="saveEventListener" />
            <entry key="flush-entity" value-ref="flushEntityEventListener" />
            <entry key="post-load" value-ref="postLoadEventListener" />
         </map>
      </property>
   </bean>

   <!-- Listeners -->
   <bean id="saveEventListener" parent="callbackHandlerEventListener"
         class="org.hibernate.ejb.event.EJB3SaveEventListener" />
   <bean id="flushEntityEventListener" parent="callbackHandlerEventListener"
         class="org.hibernate.ejb.event.EJB3FlushEntityEventListener" />
   <bean id="postLoadEventListener" parent="callbackHandlerEventListener"
         class="org.hibernate.ejb.event.EJB3PostLoadEventListener" />		
   <bean id="entityCallbackHandler" class="org.hibernate.ejb.event.EntityCallbackHandler" />
   <bean id="callbackHandlerEventListener" abstract="true"
         class="org.hibernate.ejb.event.CallbackHandlerConsumer">
      <property name="callbackHandler" ref="entityCallbackHandler" />
   </bean>
   
   <bean id="transactionManager"
         class="org.springframework.orm.hibernate3.HibernateTransactionManager">
      <property name="dataSource" ref="dataSource" />
      <property name="sessionFactory" ref="sessionFactory" />
   </bean>
   <tx:annotation-driven />
</beans>
